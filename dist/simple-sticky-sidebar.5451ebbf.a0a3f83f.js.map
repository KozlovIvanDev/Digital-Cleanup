{"version":3,"sources":["js/simple-sticky-sidebar.js"],"names":["property","cssProperty","destroySticky","element","setStyle","querySelector","topSpace","options","bottomSpace","$window","window","lastScrollVal","stickyOffsetLeft","topFixed","getStickyHeight","addEventListener","scrollTop","sticky","top","left","bottom","width","position","getBoundingClientRect"],"mappings":"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","file":"simple-sticky-sidebar.5451ebbf.a0a3f83f.js","sourceRoot":"","sourcesContent":["\n/* ========================================================================\n * Simple Sticky Sidebar\n * @version 0.1\n * @author Ismail Farooq <ismail_farooq@yahoo.com>\n * @license The MIT License (MIT) (https://github.com/ismailfarooq/simple-sticky-sidebar/blob/master/LICENSE)\n * ======================================================================== */\n\n\nfunction setStyle(element, cssProperty) {\n\tfor (var property in cssProperty){\n\t\telement.style[property] = cssProperty[property];\n\t}\n}\n\nfunction destroySticky(element){\n\tsetStyle(element, {\n\t\ttop \t\t: '',\n\t\tleft\t\t: '',\n\t\tbottom\t\t: '',\n\t\twidth\t\t: '',\n\t\tposition\t: ''\n\t});\n}\n\nfunction getOffset(el) {\n\tel = el.getBoundingClientRect();\n\treturn {\n\t\tleft: el.left + window.scrollX,\n\t\ttop: el.top + window.scrollY\n\t}\n}\n\nfunction simpleStickySidebar(element, options) {\n\t\n\t// Global options\n\tvar sticky = document.querySelector(element); // Sticky sidebar\n\tvar container = document.querySelector(options.container); // Sticky sidebar container\n\tvar topSpace = options.topSpace ? options.topSpace : 0; // Top spacing after sticky\n\tvar bottomSpace = options.bottomSpace ? options.bottomSpace : 0; // Bottom spacing after sticky\n\n\t// vars\n\tvar $window = window; // window\n\tvar stickyHeight = sticky.getBoundingClientRect().height; // Sticky sidebar height\n\tvar stickyOffsetTop = getOffset(sticky).top; // Sticky sidebar top offset\n\tvar stickyOffsetBottom = getOffset(sticky).top + sticky.getBoundingClientRect().height; // Sticky sidebar bottom offset\n\tvar stickyOffsetLeft = getOffset(sticky).left; // Sticky sidebar left offset\n\tvar topFixed = false; // checkpoint\n\tvar bottomFixed = false; // checkpoint\n\tvar lastScrollVal = 0; // checkpoint\n\t\n\tvar getStickyHeight = function() {\n\t\treturn document.querySelector(element).getBoundingClientRect().height;\n\t};\n\n\t// scrolling\n\twindow.addEventListener('scroll', function(event) {\n\t\tvar scrollTop = window.scrollY;\n\t\t// when scroll position touch the \"Sidebar\"\n\t\tif(scrollTop > stickyOffsetTop - topSpace){\n\t\t\t// if \"Sidebar\" smaller than viewport\n\t\t\tif(getStickyHeight() <= $window.innerHeight - topSpace){\n\t\t\t\t// fix \"Sidebar\" from top\n\t\t   \t\tsetStyle(sticky, {\n\t\t   \t\t\ttop \t\t: topSpace + \"px\",\n\t\t   \t\t\tleft\t\t: stickyOffsetLeft + \"px\",\n\t\t   \t\t\tbottom\t\t: '',\n\t\t   \t\t\twidth\t\t: sticky.getBoundingClientRect().width + \"px\",\n\t\t   \t\t\tposition\t: 'fixed'\n\t\t   \t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// scrolling down\n\t\t\t\tif (scrollTop > lastScrollVal){\n\t\t\t\t\t// if \"Sidebar\" fixed from top during scrolling down\n\t\t\t\t\tif(topFixed){\n\t\t\t\t\t\t// get new offset of \"Sidebar\"\n\t\t\t\t\t\tvar absoluteStickyOffsetTop = getOffset(sticky).top;\n\n\t\t\t\t   \t\tsetStyle(sticky, {\n\t\t\t\t   \t\t\ttop \t\t: absoluteStickyOffsetTop - getOffset(container).top + \"px\",\n\t\t\t\t   \t\t\tleft\t\t: '',\n\t\t\t\t   \t\t\tbottom\t\t: '',\n\t\t\t\t   \t\t\twidth\t\t: '',\n\t\t\t\t   \t\t\tposition\t: 'absolute'\n\t\t\t\t   \t\t});\n\t\t\t\t\t\ttopFixed = false;\t\n\t\t\t\t\t}\n\t\t\t\t\t// make \"Sidebar\" fixed from bottom when bottom area visible in viewport\n\t\t\t\t\tif(scrollTop > stickyOffsetBottom - $window.innerHeight){\n\t\t\t\t\t\tsetStyle(sticky, {\n\t\t\t\t   \t\t\ttop \t\t: '',\n\t\t\t\t   \t\t\tleft\t\t: stickyOffsetLeft + \"px\",\n\t\t\t\t   \t\t\tbottom\t\t: bottomSpace + \"px\",\n\t\t\t\t   \t\t\twidth\t\t: sticky.getBoundingClientRect().width + \"px\",\n\t\t\t\t   \t\t\tposition\t: 'fixed'\n\t\t\t\t   \t\t});\n\t\t\t\t   \t\tbottomFixed = true;\n\t\t\t\t\t}\n\t\t\t\t} else { // scrolling up\n\t\t\t\t\t// get new offset of \"Sidebar\" during scrolling up\n\t\t\t\t\tvar absoluteStickyOffsetTop = getOffset(sticky).top;\n\t\t\t\t\t//  if \"Sidebar\" fixed from bottom, stop sticky to its position\n\t\t\t\t\tif(bottomFixed){\n\t\t\t\t\t\tsetStyle(sticky, {\n\t\t\t\t   \t\t\ttop \t\t: absoluteStickyOffsetTop - getOffset(container).top + \"px\",\n\t\t\t\t   \t\t\tleft\t\t: '',\n\t\t\t\t   \t\t\tbottom\t\t: '',\n\t\t\t\t   \t\t\twidth\t\t: '',\n\t\t\t\t   \t\t\tposition\t: 'absolute'\n\t\t\t\t   \t\t});\n\t\t\t\t\t\tbottomFixed = false;\t\n\t\t\t\t\t}\n\t\t\t\t\t// make \"Sidebar\" fixed from top when top area visible in viewport\n\t\t\t\t\tif(scrollTop < absoluteStickyOffsetTop - topSpace){\n\t\t\t\t\t\tsetStyle(sticky, {\n\t\t\t\t   \t\t\ttop \t\t: topSpace + \"px\",\n\t\t\t\t   \t\t\tleft\t\t: stickyOffsetLeft + \"px\",\n\t\t\t\t   \t\t\tbottom\t\t: '',\n\t\t\t\t   \t\t\twidth\t\t: sticky.getBoundingClientRect().width + \"px\",\n\t\t\t\t   \t\t\tposition\t: 'fixed'\n\t\t\t\t   \t\t});\n\t\t\t\t   \t\ttopFixed = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlastScrollVal = scrollTop;\n\t\t\t}\n\t\t} else {\n\t\t\t// make sidebar to default position\n\t\t\tdestroySticky(sticky);\n\t\t}\n\t});\n}\n"]}