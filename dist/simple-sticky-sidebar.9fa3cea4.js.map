{"version":3,"sources":["js/simple-sticky-sidebar.js"],"names":["setStyle","element","cssProperty","property","style","destroySticky","top","left","bottom","width","position","getOffset","el","getBoundingClientRect","window","scrollX","scrollY","simpleStickySidebar","options","sticky","document","querySelector","container","topSpace","bottomSpace","$window","stickyOffsetTop","height","stickyOffsetBottom","stickyOffsetLeft","topFixed","bottomFixed","lastScrollVal","addEventListener","event","scrollTop","getStickyHeight","innerHeight","absoluteStickyOffsetTop"],"mappings":";AASA,SAASA,EAASC,EAASC,GACrB,IAAA,IAAIC,KAAYD,EACpBD,EAAQG,MAAMD,GAAYD,EAAYC,GAIxC,SAASE,EAAcJ,GACtBD,EAASC,EAAS,CACjBK,IAAQ,GACRC,KAAQ,GACRC,OAAU,GACVC,MAAS,GACTC,SAAW,KAIb,SAASC,EAAUC,GAEX,MAAA,CACNL,MAFDK,EAAKA,EAAGC,yBAEEN,KAAOO,OAAOC,QACvBT,IAAKM,EAAGN,IAAMQ,OAAOE,SAIvB,SAASC,EAAoBhB,EAASiB,GAGjCC,IAAAA,EAASC,SAASC,cAAcpB,GAChCqB,EAAYF,SAASC,cAAcH,EAAQI,WAC3CC,EAAWL,EAAQK,SAAWL,EAAQK,SAAW,EACjDC,EAAcN,EAAQM,YAAcN,EAAQM,YAAc,EAG1DC,EAAUX,OAEVY,GADeP,EAAON,wBAAwBc,OAC5BhB,EAAUQ,GAAQb,KACpCsB,EAAqBjB,EAAUQ,GAAQb,IAAMa,EAAON,wBAAwBc,OAC5EE,EAAmBlB,EAAUQ,GAAQZ,KACrCuB,GAAW,EACXC,GAAc,EACdC,EAAgB,EAOpBlB,OAAOmB,iBAAiB,SAAU,SAASC,GACtCC,IAAAA,EAAYrB,OAAOE,QAEpBmB,GAAAA,EAAYT,EAAkBH,EAE7Ba,GATGhB,SAASC,cAAcpB,GAASY,wBAAwBc,QAStCF,EAAQY,YAAcd,EAE1CvB,EAASmB,EAAQ,CAChBb,IAAQiB,EAAW,KACnBhB,KAAQsB,EAAmB,KAC3BrB,OAAU,GACVC,MAASU,EAAON,wBAAwBJ,MAAQ,KAChDC,SAAW,cAGX,CAEAyB,GAAAA,EAAYH,EAAc,CAE1BF,GAAAA,EAAS,CAEPQ,IAAAA,EAA0B3B,EAAUQ,GAAQb,IAE7CN,EAASmB,EAAQ,CAChBb,IAAQgC,EAA0B3B,EAAUW,GAAWhB,IAAM,KAC7DC,KAAQ,GACRC,OAAU,GACVC,MAAS,GACTC,SAAW,aAEfoB,GAAW,EAGTK,EAAYP,EAAqBH,EAAQY,cAC3CrC,EAASmB,EAAQ,CACbb,IAAQ,GACRC,KAAQsB,EAAmB,KAC3BrB,OAAUgB,EAAc,KACxBf,MAASU,EAAON,wBAAwBJ,MAAQ,KAChDC,SAAW,UAEZqB,GAAc,OAEZ,CAEFO,EAA0B3B,EAAUQ,GAAQb,IAE7CyB,IACF/B,EAASmB,EAAQ,CACbb,IAAQgC,EAA0B3B,EAAUW,GAAWhB,IAAM,KAC7DC,KAAQ,GACRC,OAAU,GACVC,MAAS,GACTC,SAAW,aAEfqB,GAAc,GAGZI,EAAYG,EAA0Bf,IACxCvB,EAASmB,EAAQ,CACbb,IAAQiB,EAAW,KACnBhB,KAAQsB,EAAmB,KAC3BrB,OAAU,GACVC,MAASU,EAAON,wBAAwBJ,MAAQ,KAChDC,SAAW,UAEZoB,GAAW,GAGhBE,EAAgBG,OAIjB9B,EAAcc","file":"simple-sticky-sidebar.9fa3cea4.js","sourceRoot":"..","sourcesContent":["\n/* ========================================================================\n * Simple Sticky Sidebar\n * @version 0.1\n * @author Ismail Farooq <ismail_farooq@yahoo.com>\n * @license The MIT License (MIT) (https://github.com/ismailfarooq/simple-sticky-sidebar/blob/master/LICENSE)\n * ======================================================================== */\n\n\nfunction setStyle(element, cssProperty) {\n\tfor (var property in cssProperty){\n\t\telement.style[property] = cssProperty[property];\n\t}\n}\n\nfunction destroySticky(element){\n\tsetStyle(element, {\n\t\ttop \t\t: '',\n\t\tleft\t\t: '',\n\t\tbottom\t\t: '',\n\t\twidth\t\t: '',\n\t\tposition\t: ''\n\t});\n}\n\nfunction getOffset(el) {\n\tel = el.getBoundingClientRect();\n\treturn {\n\t\tleft: el.left + window.scrollX,\n\t\ttop: el.top + window.scrollY\n\t}\n}\n\nfunction simpleStickySidebar(element, options) {\n\t\n\t// Global options\n\tvar sticky = document.querySelector(element); // Sticky sidebar\n\tvar container = document.querySelector(options.container); // Sticky sidebar container\n\tvar topSpace = options.topSpace ? options.topSpace : 0; // Top spacing after sticky\n\tvar bottomSpace = options.bottomSpace ? options.bottomSpace : 0; // Bottom spacing after sticky\n\n\t// vars\n\tvar $window = window; // window\n\tvar stickyHeight = sticky.getBoundingClientRect().height; // Sticky sidebar height\n\tvar stickyOffsetTop = getOffset(sticky).top; // Sticky sidebar top offset\n\tvar stickyOffsetBottom = getOffset(sticky).top + sticky.getBoundingClientRect().height; // Sticky sidebar bottom offset\n\tvar stickyOffsetLeft = getOffset(sticky).left; // Sticky sidebar left offset\n\tvar topFixed = false; // checkpoint\n\tvar bottomFixed = false; // checkpoint\n\tvar lastScrollVal = 0; // checkpoint\n\t\n\tvar getStickyHeight = function() {\n\t\treturn document.querySelector(element).getBoundingClientRect().height;\n\t};\n\n\t// scrolling\n\twindow.addEventListener('scroll', function(event) {\n\t\tvar scrollTop = window.scrollY;\n\t\t// when scroll position touch the \"Sidebar\"\n\t\tif(scrollTop > stickyOffsetTop - topSpace){\n\t\t\t// if \"Sidebar\" smaller than viewport\n\t\t\tif(getStickyHeight() <= $window.innerHeight - topSpace){\n\t\t\t\t// fix \"Sidebar\" from top\n\t\t   \t\tsetStyle(sticky, {\n\t\t   \t\t\ttop \t\t: topSpace + \"px\",\n\t\t   \t\t\tleft\t\t: stickyOffsetLeft + \"px\",\n\t\t   \t\t\tbottom\t\t: '',\n\t\t   \t\t\twidth\t\t: sticky.getBoundingClientRect().width + \"px\",\n\t\t   \t\t\tposition\t: 'fixed'\n\t\t   \t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// scrolling down\n\t\t\t\tif (scrollTop > lastScrollVal){\n\t\t\t\t\t// if \"Sidebar\" fixed from top during scrolling down\n\t\t\t\t\tif(topFixed){\n\t\t\t\t\t\t// get new offset of \"Sidebar\"\n\t\t\t\t\t\tvar absoluteStickyOffsetTop = getOffset(sticky).top;\n\n\t\t\t\t   \t\tsetStyle(sticky, {\n\t\t\t\t   \t\t\ttop \t\t: absoluteStickyOffsetTop - getOffset(container).top + \"px\",\n\t\t\t\t   \t\t\tleft\t\t: '',\n\t\t\t\t   \t\t\tbottom\t\t: '',\n\t\t\t\t   \t\t\twidth\t\t: '',\n\t\t\t\t   \t\t\tposition\t: 'absolute'\n\t\t\t\t   \t\t});\n\t\t\t\t\t\ttopFixed = false;\t\n\t\t\t\t\t}\n\t\t\t\t\t// make \"Sidebar\" fixed from bottom when bottom area visible in viewport\n\t\t\t\t\tif(scrollTop > stickyOffsetBottom - $window.innerHeight){\n\t\t\t\t\t\tsetStyle(sticky, {\n\t\t\t\t   \t\t\ttop \t\t: '',\n\t\t\t\t   \t\t\tleft\t\t: stickyOffsetLeft + \"px\",\n\t\t\t\t   \t\t\tbottom\t\t: bottomSpace + \"px\",\n\t\t\t\t   \t\t\twidth\t\t: sticky.getBoundingClientRect().width + \"px\",\n\t\t\t\t   \t\t\tposition\t: 'fixed'\n\t\t\t\t   \t\t});\n\t\t\t\t   \t\tbottomFixed = true;\n\t\t\t\t\t}\n\t\t\t\t} else { // scrolling up\n\t\t\t\t\t// get new offset of \"Sidebar\" during scrolling up\n\t\t\t\t\tvar absoluteStickyOffsetTop = getOffset(sticky).top;\n\t\t\t\t\t//  if \"Sidebar\" fixed from bottom, stop sticky to its position\n\t\t\t\t\tif(bottomFixed){\n\t\t\t\t\t\tsetStyle(sticky, {\n\t\t\t\t   \t\t\ttop \t\t: absoluteStickyOffsetTop - getOffset(container).top + \"px\",\n\t\t\t\t   \t\t\tleft\t\t: '',\n\t\t\t\t   \t\t\tbottom\t\t: '',\n\t\t\t\t   \t\t\twidth\t\t: '',\n\t\t\t\t   \t\t\tposition\t: 'absolute'\n\t\t\t\t   \t\t});\n\t\t\t\t\t\tbottomFixed = false;\t\n\t\t\t\t\t}\n\t\t\t\t\t// make \"Sidebar\" fixed from top when top area visible in viewport\n\t\t\t\t\tif(scrollTop < absoluteStickyOffsetTop - topSpace){\n\t\t\t\t\t\tsetStyle(sticky, {\n\t\t\t\t   \t\t\ttop \t\t: topSpace + \"px\",\n\t\t\t\t   \t\t\tleft\t\t: stickyOffsetLeft + \"px\",\n\t\t\t\t   \t\t\tbottom\t\t: '',\n\t\t\t\t   \t\t\twidth\t\t: sticky.getBoundingClientRect().width + \"px\",\n\t\t\t\t   \t\t\tposition\t: 'fixed'\n\t\t\t\t   \t\t});\n\t\t\t\t   \t\ttopFixed = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlastScrollVal = scrollTop;\n\t\t\t}\n\t\t} else {\n\t\t\t// make sidebar to default position\n\t\t\tdestroySticky(sticky);\n\t\t}\n\t});\n}\n"]}